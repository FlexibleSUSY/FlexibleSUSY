name: package-models

on:
  release:
    types: [published]

env:
  FS_TAG: ${{ github.event.release.tag_name }}

jobs:
  package-models:
    env:
      MODELS: 'SM THDMII THDMIIMSSMBC HTHDMIIMSSMBC HGTHDMIIMSSMBC CMSSM CMSSMSemiAnalytic CMSSMNoFV MSSM MSSMatMGUT MSSMNoFV MSSMNoFVatMGUT SplitMSSM MSSMNoFVatMGUTHimalaya HSSUSY MSSMEFTHiggs NUHMSSMNoFVHimalaya MSSMNoFVHimalaya lowMSSM NUHMSSM NMSSM CNMSSM lowNMSSM lowNMSSMTanBetaAtMZ NUTNMSSM NMSSMEFTHiggs NUTSMSSM SMSSM UMSSM E6SSM E6SSMEFTHiggs CE6SSM MRSSM2 MRSSMEFTHiggs MSSMRHN TMSSM'
    strategy:
       matrix:
          part: [1, 2]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pull the docker image
        run: docker pull navir/opensuseleap-for-flexiblesusy

      - name: Run the image
        # action checks-out our repository directly under $GITHUB_WORKSPACE
        # mount $GITHUB_WORKSPACE as /FlexibleSUSY on the container
        run: docker run -it -d --name builder -v $GITHUB_WORKSPACE:/FlexibleSUSY navir/opensuseleap-for-flexiblesusy

      - name: Copy Wolfram Engine license to the image
        run: |
          docker exec builder bash -c "mkdir /root/.WolframEngine/Licensing && echo $MATHPASS > /root/.WolframEngine/Licensing/mathpass"
          printf "Checking if wolframscript command is workings... "
          docker exec builder bash -c 'if [ $(wolframscript -code 1+2) -eq 3 ]; then echo OK; else echo fail && exit 1; fi'
          printf "Checking if math command is workings... "
          docker exec builder bash -c '
              if [[ $(math -run "Print[7 673, $SystemID]; Exit[]" < /dev/null) =~ 4711([^$"\r\n"]*) ]];
              then
                echo OK
              else
                echo fail
                exit 1
              fi
            '
        env:
          MATHPASS: ${{ secrets.MATHPASS }}

      - name: Generate models and SLHA output
        env:
           PART: ${{ matrix.part }}
        run: |
           models=$(ruby -e "MODELS=ARGV.drop(1); puts MODELS.each_slice(MODELS.length/2).to_a[ARGV[0].to_i-1].join(',')" -- $PART $MODELS)
           echo $models
           docker exec builder bash -c "
             cd FlexibleSUSY && \
             ./release/generate-models.sh \
                --number-of-jobs=2 \
                --directory=release/$FS_TAG \
                --with-models=$models \
                --with-himalaya-incdir=/Himalaya-g++/include \
                --with-himalaya-libdir=/Himalaya-g++/lib64 \
                --with-tsil-incdir=/tsil-g++ \
                --with-tsil-libdir=/tsil-g++ \
                --with-loop-libraries=collier,looptools \
                --with-looptools-incdir=/LoopTools-g++/include \
                --with-looptools-libdir=/LoopTools-g++/lib64 \
                --with-collier-incdir=/COLLIER/include \
                --with-collier-libdir=/COLLIER/lib
           "
           docker exec builder bash -c " cd FlexibleSUSY && ./release/generate-slha-output.sh --directory=release/${FS_TAG}-slha"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: models-artifacts_${{ matrix.part }}
           path: ${{ github.workspace }}/release/${{ env.FS_TAG }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: slha-output-artifacts_${{ matrix.part }}
           path: ${{ github.workspace }}/release/${{ env.FS_TAG }}-slha

  upload-models:

    needs: package-models

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
           repository:  FlexibleSUSY/FlexibleSUSY-generated
           ref: test
           token: ${{ secrets.PAT }}

      - uses: actions/download-artifact@v2
        with:
           name: models-artifacts_1
           path: /tmp/models-artifacts

      - uses: actions/download-artifact@v2
        with:
           name: models-artifacts_2
           path: /tmp/models-artifacts

      - name: Commit models
        run: |
          rm -r *
          for f in /tmp/models-artifacts/*.tar.gz; do tar -xf $f -C .; done
          git config user.name github-actions
          git config user.email github-actions@github.com
          # stages modifications, deletions and new files
          git add -A
          git commit --allow-empty -m "version $FS_TAG" && git tag v$FS_TAG
          git push origin
          git push origin v$FS_TAG

  upload-slha-outputs:

    needs: [package-models, upload-models]

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
           repository:  FlexibleSUSY/FlexibleSUSY-slha
           ref: test
           token: ${{ secrets.PAT }}

      - uses: actions/download-artifact@v2
        with:
           name: slha-output-artifacts_1
           path: /tmp/slha-output-artifacts

      - uses: actions/download-artifact@v2
        with:
           name: slha-output-artifacts_2
           path: /tmp/slha-output-artifacts

      - name: Commit SLHA outputs
        run: |
          rm *
          cp /tmp/slha-output-artifacts/* .
          git config user.name github-actions
          git config user.email github-actions@github.com
          # stages modifications, deletions and new files
          git add -A
          git commit --allow-empty -m "version $FS_TAG" && git tag v$FS_TAG
          git push origin
          git push origin v$FS_TAG
